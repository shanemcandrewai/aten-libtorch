cmake_minimum_required(VERSION 3.10)

project(aten_libtorch)

set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED True)

option(LINK_SHARED_LIBS "Link to shared PyTorch libraries" ON)
set(PYTORCH_SRC_DIR ../pytorch)
set(LIBTORCH_BIN_DIR build)
if(LINK_SHARED_LIBS) 
  set(LIBTORCH_LIB_DIR ${CMAKE_SOURCE_DIR}/${LIBTORCH_BIN_DIR}/lib/shared)
else()
  set(LIBTORCH_LIB_DIR ${CMAKE_SOURCE_DIR}/${LIBTORCH_BIN_DIR}/lib/static)
endif()
set(PYTORCH_BUILD_DIR ${PYTORCH_SRC_DIR}/build)
set(PYTORCH_LIB_DIR ${CMAKE_SOURCE_DIR}/${PYTORCH_BUILD_DIR}/lib)
set(PYTORCH_DLL_DIR ${CMAKE_SOURCE_DIR}/${PYTORCH_BUILD_DIR}/bin)
set(ATEN_LIB_DIR ${CMAKE_BINARY_DIR}/lib)

add_executable(aten_libtorch aten_min.cpp)
target_include_directories(aten_libtorch PUBLIC ${PYTORCH_SRC_DIR})
target_include_directories(aten_libtorch PUBLIC ${PYTORCH_SRC_DIR}/aten/src)
if(NOT EXISTS ${CMAKE_BINARY_DIR}/c10)
  file(COPY ${PYTORCH_BUILD_DIR}/c10 DESTINATION ${CMAKE_BINARY_DIR})
endif()
if(NOT EXISTS ${CMAKE_BINARY_DIR}/aten)
  file(COPY ${PYTORCH_BUILD_DIR}/aten DESTINATION ${CMAKE_BINARY_DIR})
endif()
target_include_directories(aten_libtorch PUBLIC ${CMAKE_BINARY_DIR})
target_include_directories(aten_libtorch PUBLIC ${CMAKE_BINARY_DIR}/aten/src)

if(LINK_SHARED_LIBS) 
  add_library(torch SHARED IMPORTED)
  add_library(c10 SHARED IMPORTED)
else()
  add_library(torch STATIC IMPORTED)
  add_library(c10 STATIC IMPORTED)
endif()

if(MSVC)
  file(MAKE_DIRECTORY ${ATEN_LIB_DIR}/shared)
  if(NOT EXISTS ${ATEN_LIB_DIR}/shared/torch_cpu.lib)
    file(COPY ${PYTORCH_LIB_DIR}/torch_cpu.lib DESTINATION ${ATEN_LIB_DIR}/shared)
  endif()
  if(NOT EXISTS ${ATEN_LIB_DIR}/shared/c10.lib)
    file(COPY ${PYTORCH_LIB_DIR}/c10.lib DESTINATION ${ATEN_LIB_DIR}/shared)
  endif()
  set_target_properties(torch PROPERTIES IMPORTED_IMPLIB ${ATEN_LIB_DIR}/shared/torch_cpu.lib)
  set_target_properties(c10 PROPERTIES IMPORTED_IMPLIB ${ATEN_LIB_DIR}/shared/c10.lib)

  if(NOT EXISTS ${CMAKE_BINARY_DIR}/torch_cpu.dll)
    file(COPY ${PYTORCH_DLL_DIR}/torch_cpu.dll DESTINATION ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
  endif()
  if(NOT EXISTS ${CMAKE_BINARY_DIR}/c10.dll)
    file(COPY ${PYTORCH_DLL_DIR}/c10.dll DESTINATION ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
  endif()
#  set_target_properties(torch PROPERTIES IMPORTED_LOCATION ${CMAKE_BINARY_DIR}/torch_cpu.dll)
#  set_target_properties(c10 PROPERTIES IMPORTED_LOCATION ${CMAKE_BINARY_DIR/c10.dll)
else()
  if(LINK_SHARED_LIBS) 
    file(MAKE_DIRECTORY ${ATEN_LIB_DIR}/shared)
    if(NOT EXISTS ${ATEN_LIB_DIR}/shared/libtorch_cpu.so)
      file(COPY ${PYTORCH_LIB_DIR}/libtorch_cpu.so DESTINATION ${ATEN_LIB_DIR}/shared)
    endif()
    if(NOT EXISTS ${ATEN_LIB_DIR}/shared/libc10.so)
      file(COPY ${PYTORCH_LIB_DIR}/libc10.so DESTINATION ${ATEN_LIB_DIR}/shared)
    endif()
    set_target_properties(torch PROPERTIES IMPORTED_LOCATION ${ATEN_LIB_DIR}/shared/libtorch_cpu.so)
    set_target_properties(c10 PROPERTIES IMPORTED_LOCATION ${ATEN_LIB_DIR}/shared/libc10.so)
  else()
    file(MAKE_DIRECTORY ${ATEN_LIB_DIR}/static)
    if(NOT EXISTS ${ATEN_LIB_DIR}/static/libtorch_cpu.a)
      file(COPY ${PYTORCH_LIB_DIR}/libtorch_cpu.a DESTINATION ${ATEN_LIB_DIR}/static)
    endif()
    if(NOT EXISTS ${ATEN_LIB_DIR}/static/libc10.a)
      file(COPY ${PYTORCH_LIB_DIR}/libc10.a DESTINATION ${ATEN_LIB_DIR}/static)
    endif()
    set_target_properties(torch PROPERTIES IMPORTED_LOCATION ${ATEN_LIB_DIR}/static/libtorch_cpu.a)
    set_target_properties(c10 PROPERTIES IMPORTED_LOCATION ${ATEN_LIB_DIR}/static/libc10.a)
  endif()
endif()
target_link_libraries(aten_libtorch torch c10)
